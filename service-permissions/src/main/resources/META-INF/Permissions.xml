<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE sqlMap      
    PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"      
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="Permissions">

    <!-- Use type aliases to avoid typing the full classname every time. -->
    <typeAlias alias="Permissions" type="fi.mml.portti.domain.permissions.Permissions" />

    <resultMap id="permissionsResult" class="HashMap">
        <result property="id" column="id" />
        <result property="resourceName" column="resource_name" />
        <result property="resourceNamespace" column="resource_namespace" />
        <result property="resourceType" column="resource_type" />
        <result property="externalId" column="externalid" />
        <result property="externalIdType" column="externalid_type" />
        <result property="permissionsType" column="permissions_type" />
    </resultMap>
        
    <resultMap id="resourcesWithGrantedPermissionsResult" class="HashMap">
        <result property="resourceNamespace" column="namespace" />
        <result property="resourceName" column="name" />
    </resultMap>
    
    <parameterMap id="resourceUserIdAndPermissionsTypeParam" class="Map">
        <parameter property="resourceUserId" />
        <parameter property="permissionsType" />
    </parameterMap>
    
    <parameterMap id="resourcesWithGrantedPermissionsParam" class="Map">
        <parameter property="resourceType" />
        <parameter property="externalId" />
        <parameter property="externalType"/>
        <parameter property="permissionsType"/>
    </parameterMap>
    
    <parameterMap id="permissionsOfResourceParam" class="Map">
        <parameter property="resourceName" />
        <parameter property="resourceNamespace" />
        <parameter property="resourceType" />
        <parameter property="externalIdType"/>
    </parameterMap>
    
    <parameterMap id="deletePermissionsParam" class="Map">
        <parameter property="resourceName" />
        <parameter property="resourceNamespace" />
        <parameter property="resourceType" />
        <parameter property="externalId" />
        <parameter property="externalIdType" />
        <parameter property="permissionsType"/>
    </parameterMap>
    
    <parameterMap id="resourceUserParam" class="Map">
        <parameter property="resourceName" />
        <parameter property="resourceNamespace" />
        <parameter property="resourceType" />
        <parameter property="externalId" />
        <parameter property="externalIdType" />
    </parameterMap>
   
    <parameterMap id="externalIdsAndLayerId" class="Map">
        <parameter property="idList" />
        <parameter property="id" />
    </parameterMap>
    
    <parameterMap id="externalIds" class="Map">
        <parameter property="idList" />
    </parameterMap>
   
    
    <resultMap id="publishPermissionsList" class="HashMap">
        <result property="resourceName" />
        <result property="resourceNamespace" />
        <result property="externalId" />
    </resultMap>
    
   
    
    
    <parameterMap id="publishPermissionsList3" class="HashMap">
        <parameter property="resourceType" />
    </parameterMap>
    
    <select id="maxId" resultClass="int">
        select max(id) from portti_resource_user
    </select>
    
    
    <select id="findPublishPermissions"  resultMap="publishPermissionsList">
       select 
       	r.resource_name as resourceName,
       	r.resource_namespace as resourceNamespace,
       	r.externalid as externalId
       from 
       	portti_resource_user r, portti_permissions p  
 	   where r.id=p.resource_user_id 
 	   	and p.permissions_type = 'PUBLISH' 
 	   	and r.externalid_type = 'ROLE'
    </select>
    
    
    
    <select id="findResourceUserId" resultClass="int" parameterMap="resourceUserParam">
        select id
        from portti_resource_user
        where resource_name=?
        and resource_namespace=?
        and resource_type=?
        and externalid=?
        and externalid_type=?
    </select>
    
    <select id="findResourcesWithGrantedPermissions" resultMap="resourcesWithGrantedPermissionsResult" parameterMap="resourcesWithGrantedPermissionsParam">
        select r.resource_namespace as namespace, r.resource_name as name
        from portti_resource_user r, portti_permissions p
        where r.id=p.resource_user_id
        and r.resource_type=?
        and r.externalid=?
        and r.externalid_type=?
        and p.permissions_type=?
    </select>
    
    <select id="findPermissionsOfResource" resultMap="permissionsResult" parameterMap="permissionsOfResourceParam">
        select r.id as id, r.resource_name as resource_name, r.resource_namespace as resource_namespace, 
        r.resource_type as resource_type, r.externalid as externalid, r.externalid_type as externalid_type, 
        p.permissions_type as permissions_type
        from portti_resource_user r, portti_permissions p
        where r.id=p.resource_user_id
        and r.resource_name=?
        and r.resource_namespace=?
        and r.resource_type=?
        and r.externalid_type=?
    </select>
    
    <select id="findPermissionsOfResourceUser" resultMap="permissionsResult" parameterMap="resourceUserParam">
        select r.id as id, r.resource_name as resource_name, r.resource_namespace as resource_namespace, 
        r.resource_type as resource_type, r.externalid as externalid, r.externalid_type as externalid_type, 
        p.permissions_type as permissions_type
        from portti_resource_user r, portti_permissions p
        where r.id=p.resource_user_id
        and r.resource_name=?
        and r.resource_namespace=?
        and r.resource_type=?
        and r.externalid=?
        and r.externalid_type=?
    </select>
    
    <parameterMap id="layerPermissionParams" class="Map">
        <parameter property="permissionsType" /> <!--  javaType="java.lang.String" -->
        <parameter property="idList" /> <!--  javaType="java.util.List" -->
    </parameterMap>
    
    <resultMap id="layerPermissionsResult" class="HashMap">
        <result property="layerId" column="layerId" />
        <result property="externalId" column="externalid" />
        <result property="externalIdType" column="externalid_type" />
        <result property="permissionsType" column="permissions_type" />
    </resultMap>
    
    <select id="findPermissionsForLayerIdList" resultMap="layerPermissionsResult" parameterMap="layerPermissionParams">
        SELECT 
            l.id as layerId, 
            u.externalid, 
            u.externalid_type, 
            p.permissions_type
      FROM 
            portti_resource_user u, 
            portti_permissions p, 
            portti_maplayer l 
      WHERE
            u.id = p.resource_user_id AND 
            u.resource_name = l.wmsname AND 
            u.resource_namespace = l.wmsurl 
            <isNotEmpty property="permissionsType">AND p.permissions_type = #permissionsType#</isNotEmpty>
            <isNotEmpty property="idList" prepend="and">
                l.id in
                <iterate open="(" close=")" conjunction="," property="idList" >
                    #idList[]#
                </iterate>
            </isNotEmpty>
      ORDER BY 
            l.id;
    </select>
    
    <select id="findPermissionsForBaseLayerIdList" resultMap="layerPermissionsResult" parameterMap="layerPermissionParams">
        SELECT 
            l.id as layerId, 
            u.externalid, 
            u.externalid_type, 
            p.permissions_type
      FROM 
            portti_resource_user u, 
            portti_permissions p, 
            portti_layerclass l 
      WHERE
            u.id = p.resource_user_id AND 
            u.resource_name = CAST(l.id AS character varying) 
            <isNotEmpty property="permissionsType">AND p.permissions_type = #permissionsType#</isNotEmpty>
            <isNotEmpty property="idList" prepend="and">
                l.id in
                <iterate open="(" close=")" conjunction="," property="idList" >
                    #idList[]#
                </iterate>
            </isNotEmpty>
      ORDER BY 
            l.id;
    </select>
        
    <statement id="insert" parameterClass="Permissions" resultClass="int">
        insert into portti_resource_user (resource_name, resource_namespace, resource_type, externalid, externalid_type)
        values (#uniqueResourceName.name#, #uniqueResourceName.namespace#, #uniqueResourceName.type#, #externalId#, #externalIdType#)
    </statement>
    
    <statement id="insertPermissions" parameterMap="resourceUserIdAndPermissionsTypeParam">
        insert into portti_permissions (resource_user_id, permissions_type) values (?, ?)
    </statement>
    
    <statement id="deletePermissions" parameterMap="deletePermissionsParam">
        delete from portti_permissions where resource_user_id in
        (select id 
        from portti_resource_user 
        where resource_name=?
        and resource_namespace=?
        and resource_type=?
        and externalid=?
        and externalid_type=?) and permissions_type=?
    </statement>
    
    <statement id="deleteResourceUsers" parameterMap="resourceUserParam">
        delete from portti_resource_user 
        where resource_name=?
        and resource_namespace=?        
        and resource_type=?
        and externalid=?
        and externalid_type=?
    </statement>
    
    <select id="findMaplayerIdsForViewPermissionsByExternalIds" resultClass="HashMap" parameterMap="externalIds">
	    SELECT 
		    map.id
		FROM 
		    portti_permissions pp, 
		    portti_resource_user pru, 
		    portti_maplayer map 
		WHERE
		    pp.permissions_type = 'VIEW_LAYER' AND
		    pru.id = pp.resource_user_id AND
		    pru.resource_type = 'WMS_LAYER' AND
		    pru.resource_namespace = map.wmsurl AND
		    pru.resource_name = map.wmsname AND
		    pru.externalId IN
		    <iterate open="(" close=")" conjunction="," property="idList" >
                    #idList[]#
            </iterate>
		    
		    
    </select>
    
    <select id="hasViewPermissionForLayerByLayerId" resultClass="long" parameterMap="externalIdsAndLayerId">
        SELECT 
            map.id
        FROM 
            portti_permissions pp, 
            portti_resource_user pru, 
            portti_maplayer map 
        WHERE
            pp.permissions_type = 'VIEW_LAYER' AND
            pru.id = pp.resource_user_id AND
            pru.resource_type = 'WMS_LAYER' AND
            pru.resource_namespace = map.wmsurl AND
            pru.resource_name = map.wmsname AND
            pru.externalId IN 
            <iterate open="(" close=")" conjunction="," property="idList" >
                    #idList[]#
            </iterate> AND
            map.id = #id#
    </select>
    
    
</sqlMap>