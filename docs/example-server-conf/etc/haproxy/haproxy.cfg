#---------------------------------------------------------------------
# Example configuration for a possible web application.  See the
# full configuration options online.
#
#   http://haproxy.1wt.eu/download/1.4/doc/configuration.txt
#
#---------------------------------------------------------------------

#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    # to have these messages end up in /var/log/haproxy.log you will
    # need to:
    #
    # 1) configure syslog to accept network log events.  This is done
    #    by adding the '-r' option to the SYSLOGD_OPTIONS in
    #    /etc/sysconfig/syslog
    #
    # 2) configure local2 events to go to the /var/log/haproxy.log
    #   file. A line like the following can be added to
    #   /etc/sysconfig/syslog
    #
    #    local2.*                       /var/log/haproxy.log
    #
    log         127.0.0.1 local2

    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     4000                    # max ulimit
    user        haproxy
    group       haproxy
    daemon

    # turn on stats unix socket
    # stats socket /var/lib/haproxy/stats

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode                    http
    log                     global
    option                  httplog
    option                  dontlognull
    option                  http-server-close # don't keep alive
    option                  http-pretend-keepalive # pretend keep alive so that websocket works

    retries                 3
    contimeout              5000
    clitimeout              50000
    srvtimeout              50000


#---------------------------------------------------------------------
# PROXY 80 (HTTP)
#---------------------------------------------------------------------

frontend insecure
    bind *:80
    timeout client 86400000

    acl is_websocket hdr(Upgrade) -i WebSocket
    acl is_websocket hdr_beg(Host) -i ws
    acl is_jetty path_beg /transport-0.0.1
    acl is_jetty path_beg /oskari-printout-backend-1.0.1-SNAPSHOT

    use_backend jetty if is_jetty or is_websocket
    default_backend apache


#---------------------------------------------------------------------
# PROXY 443 (HTTPS)
#---------------------------------------------------------------------

frontend secure
    bind *:8443
#    bind *:443 ssl crt /etc/pki/tls/certs/haproxy.pem ca-file /etc/pki/tls/certs/SSL_CA_Bundle.pem
    timeout client 86400000

    acl is_websocket hdr(Upgrade) -i WebSocket
    acl is_websocket hdr_beg(Host) -i wss
    acl is_jetty path_beg /transport-0.0.1
    acl is_jetty path_beg /oskari-printout-backend-1.0.1-SNAPSHOT

    use_backend jetty if is_jetty or is_websocket
    default_backend apache_secure


#---------------------------------------------------------------------
# apache backend
#---------------------------------------------------------------------
backend apache
    balance roundrobin
    option forwardfor # This sets X-Forwarded-For
    timeout server 30000
    timeout connect 4000
    server apache 127.0.0.1:88 weight 1 maxconn 1024 check


#---------------------------------------------------------------------
# secure apache backend
#---------------------------------------------------------------------
backend apache_secure
    balance roundrobin
    option forwardfor # This sets X-Forwarded-For
    timeout server 30000
    timeout connect 4000
    server apache 127.0.0.1:84 weight 1 maxconn 1024 check


#---------------------------------------------------------------------
# jetty backend
#---------------------------------------------------------------------
backend jetty
    balance roundrobin
    option forwardfor # This sets X-Forwarded-For
    timeout queue 5000
    timeout server 86400000
    timeout connect 86400000
    server jetty 127.0.0.1:8888 weight 1 maxconn 1024 check