###############################################################################
## This file contains reasonable defaults for configuring Oskari.
## To override any of these add a file named 'oskari-ext.properties' in classpath
## with the same property key as used here
###############################################################################

# set development to false or comment it out to load using minified javascript
# (requires minified version of the javascript to be compiled and servlet init-param to set the version to load)
development=true
# Client version to use in links if development = false
oskari.client.version=${project.version}
# set to true to get database populated with initial demo content
oskari.init.db=true

##################################
# DB connection parameters
##################################

db.jndi.name=${db.jndi.name}
# Defines database driver used for Oskari content
db.jndi.driverClassName=${db.jndi.driverClassName}
# Defines database connection url for Oskari content
db.url=${db.url}
db.username=${db.username}
db.password=${db.password}

# mark any addition pool property tokens so we can check/add them automagically
db.additional.pools=myplaces,analysis

# jdbc/omat_paikatPool
db.myplaces.jndi.name=${db.myplaces.jndi.name}
db.myplaces.url=${db.myplaces.url}
db.myplaces.username=${db.myplaces.username}
db.myplaces.password=${db.myplaces.password}

# jdbc/analysisPool
db.analysis.jndi.name=${db.analysis.jndi.name}
db.analysis.url=${db.analysis.url}
db.analysis.username=${db.analysis.username}
db.analysis.password=${db.analysis.password}
##################################

##################################
# Map services environment configurations
##################################
# domain to use if paths are relative
oskari.domain=http://localhost:2373

# Start the server in this port (defaults to 2373)
oskari.server.port=2373

# path for incoming calls to access map
oskari.map.url=/

# url path to call for ajax requests/action routes for map
oskari.ajax.url.prefix=/?

# session token name
oskari.cookie.session=jsessionid

# backend node token name
oskari.cookie.route=ROUTEID

# Logger implementation - SystemLogger logs into System.out/err, replace with logging implementation of your choice
oskari.logger=fi.nls.oskari.log.SystemLogger

# UserService implementation - create own implementation to integrate into actual systems and provide feedback for missing interface methods.
oskari.user.service=fi.nls.oskari.user.DatabaseUserService

# redis configuration
redis.hostname=localhost
redis.port=6379
redis.pool.size=100
##################################

##################################
# Configuring search channel implementations for search services.
# Properties are prefixed with 'search.channel.[CHANNEL ID].':
#   className indicates the implementation class
#   other properties are passed on to the implementation class.
##################################
# OpenStreetMap search channel settings
search.channel.OPENSTREETMAP_CHANNEL.className=fi.nls.oskari.search.OpenStreetMapSearchChannel
search.channel.OPENSTREETMAP_CHANNEL.service.url=http://nominatim.openstreetmap.org/search

# comma-separated list of search channel ids that should be registered for search service
search.channels=OPENSTREETMAP_CHANNEL

# comma-separated list of id for search channel that will be used (defaulted to) if none are explicitly configured
search.channels.default=OPENSTREETMAP_CHANNEL
##################################

##################################
# Configurations for action handlers
##################################
# comma-separated list of search channel ids used by GetSearchResult
actionhandler.GetSearchResult.channels=OPENSTREETMAP_CHANNEL

# bundles that are added on runtime to view if user has one of configured role
actionhandler.GetAppSetup.dynamic.bundles = admin-layerselector, admin-layerrights, admin-users, admin

# Linking dynamic bundles based on user roles
# Properties are named 'actionhandler.GetAppSetup.dynamic.[BUNDLE ID].roles'
#   with value as comma-separated list of role names that should be served the bundle
actionhandler.GetAppSetup.dynamic.bundle.admin-layerrights.roles = Admin
actionhandler.GetAppSetup.dynamic.bundle.admin-layerselector.roles = Admin
actionhandler.GetAppSetup.dynamic.bundle.admin-users.roles = Admin
actionhandler.GetAppSetup.dynamic.bundle.admin.roles = Admin
##################################

##################################
# Configurations specific to database content
##################################
# Used to configure a template view for publishing maps, defaults to view with id 1
view.template.publish=1

# Administrator role - special handling for action routes (deleting map layers and such)
oskari.user.role.admin=Admin


##################################
# myplaces configuration
##################################
myplaces.ows.url=http://localhost:8082/geoserver/oskari/ows?
myplaces.wms.url=http://localhost:8082/geoserver/oskari/wms?buffer=128&tiled=yes&tilesorigin=0,0&CQL_FILTER=
myplaces.user=admin
myplaces.password=geoserver
# Base WFS layer id for myplaces (portti_maplayer and portti_wfs_layer tables)
# Find correct layer id from database when my_places wfs base layer has been inserted
myplaces.baselayer.id=-1
# My places namespace
myplaces.xmlns=http://www.oskari.org
# My places namespace prefix
myplaces.xmlns.prefix=oskari
##################################

##################################
# proxy services
##################################
oskari.proxyservices=print, wfsquery, myplacestile

# relative urls and prefixed with 'oskari.domain' property
oskari.proxy.print.url=/portti-map-imaging/imaging/service/thumbnail/extent.jsonp
oskari.proxy.print.params=zoomLevel,coord,mapLayers,showMarker,forceCache,noSavedState,pageSize
oskari.proxy.print.header.Content-Type=application/json; charset=UTF-8

oskari.proxy.wfsquery.handler=fi.nls.oskari.service.WFSQueryProxyHandler
oskari.proxy.wfsquery.header.Content-Type=text/xml

oskari.proxy.myplacestile.url=/geoserver/wms?CQL_FILTER=
oskari.proxy.myplacestile.handler=fi.nls.oskari.proxy.MyPlacesProxyHandler
oskari.proxy.myplacestile.user=
oskari.proxy.myplacestile.pass=
##################################
